// <auto-generated />
using System;
using AppBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AppBackend.Models.CombineFlight", b =>
                {
                    b.Property<string>("ArriveAirport")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ArriveAirport");

                    b.Property<DateTime>("ArriveDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("ArriveDateTime");

                    b.Property<string>("DepartAirport")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DepartAirport");

                    b.Property<DateTime>("DepartDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DepartDateTime");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("FlightNumber");

                    b.Property<string>("FlightSource")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("flight_source");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.ToTable((string)null);

                    b.ToView("combined_flights", (string)null);
                });

            modelBuilder.Entity("AppBackend.Models.ConnectingFlight", b =>
                {
                    b.Property<TimeSpan>("ALLFlightDuration")
                        .HasColumnType("time(6)")
                        .HasColumnName("ALLFlightDuration");

                    b.Property<string>("ConnectingAirport")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("ConnectingAirport");

                    b.Property<DateTime>("Flight1_ArrivalDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Flight1_ArrivalDateTime");

                    b.Property<string>("Flight1_DepartAirport")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Flight1_DepartAirport");

                    b.Property<DateTime>("Flight1_DepartureDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Flight1_DepartureDateTime");

                    b.Property<int>("Flight1_Id")
                        .HasColumnType("int")
                        .HasColumnName("Flight1_Id");

                    b.Property<string>("Flight1_Source")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Flight1_Source");

                    b.Property<DateTime>("Flight2_ArrivalDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Flight2_ArrivalDateTime");

                    b.Property<string>("Flight2_ArriveAirport")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("Flight2_ArriveAirport");

                    b.Property<DateTime>("Flight2_DepartureDateTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("Flight2_DepartureDateTime");

                    b.Property<int>("Flight2_Id")
                        .HasColumnType("int")
                        .HasColumnName("Flight2_Id");

                    b.Property<string>("Flight2_Source")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Flight2_Source");

                    b.Property<string>("IndirectFlightNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("IndirectFlightNumber");

                    b.Property<TimeSpan>("TransitTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("TransitTime");

                    b.ToTable((string)null);

                    b.ToView("connecting_flights_view", (string)null);
                });

            modelBuilder.Entity("AppBackend.Models.Deltas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArriveAirport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ArriveDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartAirport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DepartDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Deltas");
                });

            modelBuilder.Entity("AppBackend.Models.SouthWests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArriveAirport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ArriveDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartAirport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DepartDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SouthWests");
                });
#pragma warning restore 612, 618
        }
    }
}
